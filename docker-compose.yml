services:
  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    ports:
      - "${API_PORT}:8081"
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl localhost:${API_PORT}/appinfo" ]
      interval: 10s
      timeout: 5s
      retries: 3
    env_file:
      - .env

  web:
    build:
      context: .
      dockerfile: docker/client/Dockerfile
    ports:
      - "${WEB_PORT}:80"
    depends_on:
      api:
        condition: service_healthy
    env_file:
      - .env

  database:
    image: postgres:${POSTGRES_VERSION}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "${POSTGRES_PORT}:5432"
    env_file:
      - .env
    volumes:
      - database:/var/lib/postgresql/data

  valkey:
    build:
      context: .
      dockerfile: docker/valkey/Dockerfile
    ports:
      - "${VALKEY_PORT}:8080"
    env_file:
      - .env

volumes:
  database: